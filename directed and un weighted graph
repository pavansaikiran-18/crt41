\\insertion in a directed and un weighted graph



def addnode(v):
    global n
    if v in nodes:
        print(v,"already existed")
    else:
        nodes.append(v)
        n=n+1
    for x in graph:
        x.append(0)
    temp=[]
    for i in range(n):
        temp.append(0)
    graph.append(temp)
def show():
    for i in range(n):
        for j in range(n):
            print(graph[i][j],end=" ")
        print()
def addEdge(node1,node2):
    if node1 not in nodes:
        print(node1,"is not present ")
    elif node2 not in nodes:
        print(node2,"is not present")
    else:
        i=nodes.index(node1)
        j=nodes.index(node2)
        graph[i][j]=1
        show()
nodes=[]
graph=[]
n=0
while True:
    print()
    print("\n1.add none\n2.add edge \n3.print graph\n.4.exit")
    ch=int(input("enter the choice"))
    if ch==1:
        v=input("enter:")
        addnode(v)
    elif ch==2:
        node1=input("enter:")
        node2=input("enter:")
        addEdge(node1,node2)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print("invalid ")


output:
1.add none
2.add edge 
3.print graph
.4.exit
enter the choice1
enter:a


1.add none
2.add edge 
3.print graph
.4.exit
enter the choice1
enter:b


1.add none
2.add edge 
3.print graph
.4.exit
enter the choice1
enter:c


1.add none
2.add edge 
3.print graph
.4.exit
enter the choice3
0 0 0 
0 0 0 
0 0 0 


1.add none
2.add edge 
3.print graph
.4.exit
enter the choice2
enter:a
enter:b
0 1 0 
0 0 0 
0 0 0 


1.add none
2.add edge 
3.print graph
.4.exit
enter the choice2
enter:c
enter:b
0 1 0 
0 0 0 
0 1 0 
        
