\\ file for adacency list
def addnode(v):
    global n
    if v in graph:
        print(v,"already existed")
    else:
        graph[v]=[]
def show():
    for x in graph:
        print(x,":",graph[x])
    
def addEdge(node1,node2):
    if node1 not in graph:
        print(node1,"is not present ")
    elif node2 not in graph:
        print(node2,"is not present")
    else:
        graph[node1].append(node2)
        graph[node2].append(node1)
        show()

graph={}
n=0
while True:
    print()
    print("\n1.add none\n2.add edge \n3.print graph\n.4.exit")
    ch=int(input("enter the choice"))
    if ch==1:
        v=input("enter:")
        addnode(v)
    elif ch==2:
        node1=input("enter:")
        node2=input("enter:")
        addEdge(node1,node2)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print("invalid ")                                                                                                                                                            
        
  output:
1.add none
2.add edge 
3.print graph
.4.exit
enter the choice1
enter:a


1.add none
2.add edge 
3.print graph
.4.exit
enter the choice1
enter:b


1.add none
2.add edge 
3.print graph
.4.exit
enter the choice1
enter:c


1.add none
2.add edge 
3.print graph
.4.exit
enter the choice1
enter:d


1.add none
2.add edge 
3.print graph
.4.exit
enter the choice3
a : []
b : []
c : []
d : []


1.add none
2.add edge 
3.print graph
.4.exit
enter the choice2
enter:a
enter:b
a : ['b']
b : ['a']
c : []
d : []


1.add none
2.add edge 
3.print graph
.4.exit
enter the choice2
enter:c
enter:d
a : ['b']
b : ['a']
c : ['d']
d : ['c']


1.add none
2.add edge 
3.print graph
.4.exit
enter the choice2
enter:b
enter:c
a : ['b']
b : ['a', 'c']
c : ['d', 'b']
d : ['c']


1.add none
2.add edge 
3.print graph
.4.exit
